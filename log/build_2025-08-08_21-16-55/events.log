[0.000000] (-) TimerEvent: {}
[0.000732] (temperature_monitor) JobQueued: {'identifier': 'temperature_monitor', 'dependencies': OrderedDict()}
[0.000914] (temperature_system) JobQueued: {'identifier': 'temperature_system', 'dependencies': OrderedDict()}
[0.001708] (temperature_monitor) JobStarted: {'identifier': 'temperature_monitor'}
[0.100552] (-) TimerEvent: {}
[0.197627] (temperature_system) JobStarted: {'identifier': 'temperature_system'}
[0.202695] (-) TimerEvent: {}
[0.305356] (-) TimerEvent: {}
[0.406929] (-) TimerEvent: {}
[0.513657] (-) TimerEvent: {}
[0.616203] (-) TimerEvent: {}
[0.717650] (-) TimerEvent: {}
[0.818939] (-) TimerEvent: {}
[0.922614] (-) TimerEvent: {}
[1.025523] (-) TimerEvent: {}
[1.130494] (-) TimerEvent: {}
[1.236324] (-) TimerEvent: {}
[1.343663] (-) TimerEvent: {}
[1.450295] (-) TimerEvent: {}
[1.552398] (-) TimerEvent: {}
[1.654414] (-) TimerEvent: {}
[1.758230] (-) TimerEvent: {}
[1.862360] (-) TimerEvent: {}
[1.963609] (-) TimerEvent: {}
[2.074556] (-) TimerEvent: {}
[2.178005] (-) TimerEvent: {}
[2.279633] (-) TimerEvent: {}
[2.384285] (-) TimerEvent: {}
[2.489581] (-) TimerEvent: {}
[2.591649] (-) TimerEvent: {}
[2.697576] (-) TimerEvent: {}
[2.806158] (-) TimerEvent: {}
[2.907637] (-) TimerEvent: {}
[3.009392] (-) TimerEvent: {}
[3.114466] (-) TimerEvent: {}
[3.225311] (-) TimerEvent: {}
[3.325856] (-) TimerEvent: {}
[3.427917] (-) TimerEvent: {}
[3.535102] (-) TimerEvent: {}
[3.636348] (-) TimerEvent: {}
[3.738804] (-) TimerEvent: {}
[3.842127] (-) TimerEvent: {}
[3.949192] (-) TimerEvent: {}
[4.052379] (-) TimerEvent: {}
[4.165002] (-) TimerEvent: {}
[4.267252] (-) TimerEvent: {}
[4.368495] (-) TimerEvent: {}
[4.476640] (-) TimerEvent: {}
[4.587556] (-) TimerEvent: {}
[4.693220] (-) TimerEvent: {}
[4.795496] (-) TimerEvent: {}
[4.900454] (-) TimerEvent: {}
[5.002709] (-) TimerEvent: {}
[5.043522] (temperature_system) StderrLine: {'line': b'Traceback (most recent call last):\n  File "/usr/lib/python3/dist-packages/colcon_core/executor/__init__.py", line 91, in __call__\n    rc = await self.task(*args, **kwargs)\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File "/usr/lib/python3/dist-packages/colcon_core/task/__init__.py", line 93, in __call__\n    return await task_method(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File "/usr/lib/python3/dist-packages/colcon_ros/task/ament_python/build.py", line 51, in build\n    setup_py_data = get_setup_data(self.context.pkg, env)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File "/usr/lib/python3/dist-packages/colcon_core/task/python/__init__.py", line 20, in get_setup_data\n    return dict(pkg.metadata[key](env))\n                ^^^^^^^^^^^^^^^^^^^^^^\n  File "/usr/lib/python3/dist-packages/colcon_ros/package_augmentation/ros_ament_python.py", line 57, in getter\n    return get_setup_information(\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File "/usr/lib/python3/dist-packages/colcon_python_setup_py/package_identification/python_setup_py.py", line 249, in get_setup_information\n    _setup_information_cache[hashable_env] = _get_setup_information(\n                                             ^^^^^^^^^^^^^^^^^^^^^^^\n  File "/usr/lib/python3/dist-packages/colcon_python_setup_py/package_identification/python_setup_py.py", line 296, in _get_setup_information\n    result = subprocess.run(\n             ^^^^^^^^^^^^^^^\n  File "/usr/lib/python3.12/subprocess.py", line 571, in run\n    raise CalledProcessError(retcode, process.args,\nsubprocess.CalledProcessError: Command \'[\'/usr/bin/python3\', \'-c\', \'import sys;from contextlib import suppress;exec("with suppress(ImportError):    from setuptools.extern.packaging.specifiers    import SpecifierSet");exec("with suppress(ImportError):    from packaging.specifiers import SpecifierSet");from distutils.core import run_setup;dist = run_setup(    \\\'setup.py\\\', script_args=(\\\'--dry-run\\\',), stop_after=\\\'config\\\');skip_keys = (\\\'cmdclass\\\', \\\'distclass\\\', \\\'ext_modules\\\', \\\'metadata\\\');data = {    key: value for key, value in dist.__dict__.items()     if (        not key.startswith(\\\'_\\\') and         not callable(value) and         key not in skip_keys and         key not in dist.display_option_names    )};data[\\\'metadata\\\'] = {    k: v for k, v in dist.metadata.__dict__.items()     if k not in (\\\'license_files\\\', \\\'provides_extras\\\')};sys.stdout.buffer.write(repr(data).encode(\\\'utf-8\\\'))\']\' returned non-zero exit status 1.\n'}
[5.054424] (temperature_system) JobEnded: {'identifier': 'temperature_system', 'rc': 1}
[5.067233] (temperature_monitor) JobEnded: {'identifier': 'temperature_monitor', 'rc': 'SIGINT'}
[5.075253] (-) EventReactorShutdown: {}
