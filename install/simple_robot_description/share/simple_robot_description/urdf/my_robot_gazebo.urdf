<?xml version="1.0"?>
<robot name="my_robot">
  <!-- TODO: Create a base_link with visual, collision, and inertial properties -->
  <link name="base_link">
    <visual>
      <geometry>
        <box size="0.3 0.3 0.1"/>
      </geometry>
      <material name="blue">
        <color rgba="0 0 0.8 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="0.3 0.3 0.1"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1.0"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="0.01" ixy="0.0" ixz="0.0" iyy="0.01" iyz="0.0" izz="0.01"/>
    </inertial>
  </link>
  
  <!-- Right Wheel -->
  <link name="right_wheel">
    <visual>
      <!-- Use cylinder that's SHORTER but WIDER to show the correct orientation -->
      <geometry>
        <cylinder radius="0.08" length="0.05"/>
      </geometry>
      <material name="black">
        <color rgba="0 0 0 1"/>
      </material>
      <!-- No rotation, leaving it flat -->
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="0.08" length="0.05"/>
      </geometry>
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </collision>
    <inertial>
      <mass value="0.1"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="0.00015" ixy="0.0" ixz="0.0" iyy="0.00015" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>

  <!-- Left Wheel -->
  <link name="left_wheel">
    <visual>
      <!-- Use cylinder that's SHORTER but WIDER to show the correct orientation -->
      <geometry>
        <cylinder radius="0.08" length="0.05"/>
      </geometry>
      <material name="black">
        <color rgba="0 0 0 1"/>
      </material>
      <!-- No rotation, leaving it flat -->
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="0.08" length="0.05"/>
      </geometry>
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </collision>
    <inertial>
      <mass value="0.1"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="0.00015" ixy="0.0" ixz="0.0" iyy="0.00015" iyz="0.0" izz="0.0001"/>
    </inertial>
  </link>

  <!-- Caster Wheel -->
  <link name="caster_wheel">
    <visual>
      <geometry>
        <sphere radius="0.035"/>
      </geometry>
      <material name="grey">
        <color rgba="0.5 0.5 0.5 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <sphere radius="0.035"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.05"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="0.00002" ixy="0.0" ixz="0.0" iyy="0.00002" iyz="0.0" izz="0.00002"/>
    </inertial>
  </link>

  <!-- Right Wheel Joint -->
  <joint name="right_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="right_wheel"/>
    <!-- Position the wheel on its edge -->
    <origin xyz="-0.05 -0.17 0" rpy="1.5707 0 0"/>
    <!-- Rotate around Z axis as viewed from wheel's perspective -->
    <axis xyz="0 0 -1"/>
    <dynamics damping="0.01" friction="0.0"/>
  </joint>

  <!-- Left Wheel Joint -->
  <joint name="left_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="left_wheel"/>
    <!-- Position the wheel on its edge -->
    <origin xyz="-0.05 0.17 0" rpy="1.5707 0 0"/>
    <!-- Rotate around Z axis as viewed from wheel's perspective -->
    <axis xyz="0 0 -1"/>
    <dynamics damping="0.01" friction="0.0"/>
  </joint>

  <!-- Caster Joint -->
  <joint name="caster_joint" type="fixed">
    <parent link="base_link"/>
    <child link="caster_wheel"/>
    <origin xyz="0.12 0 -0.0325" rpy="0 0 0"/>
  </joint>

  <!-- TODO: Create left and right camera links -->

  <joint name="camera_joint" type="fixed">
    <parent link="base_link"/>
    <child link="camera_link"/>
    <origin xyz="0.15 -0.12 0.075" rpy="0 0 0"/>
  </joint>

  <joint name="camera_joint" type="fixed">
    <parent link="base_link"/>
    <child link="camera_link"/>
    <origin xyz="0.15 -0.12 0.075" rpy="0 0 0"/>
  </joint>

  <!-- TODO: Create left and right camera optical links -->

  <link name="camera_link_optical">
    <inertial>
      <mass value="0.001"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
    </inertial>
  </link>

  <link name="camera_link_optical">
    <inertial>
      <mass value="0.001"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
    </inertial>
  </link>

  <!-- TODO: Create fixed joints for the cameras (connecting to base_link) -->

  <joint name="camera_joint" type="fixed">
    <parent link="base_link"/>
    <child link="camera_link"/>
    <origin xyz="0.15 -0.12 0.075" rpy="0 0 0"/>
  </joint>

  <joint name="camera_joint" type="fixed">
    <parent link="base_link"/>
    <child link="camera_link"/>
    <origin xyz="0.15 -0.12 0.075" rpy="0 0 0"/>
  </joint>

  <!-- TODO: Create fixed joints for the camera optical frames (connecting to respective camera links) -->

  <joint name="camera_optical_joint" type="fixed">
    <parent link="camera_link"/>
    <child link="camera_link_optical"/>
    <origin xyz="0 0 0" rpy="-1.5707 0 -1.5707"/>
  </joint>

  <joint name="camera_optical_joint" type="fixed">
    <parent link="camera_link"/>
    <child link="camera_link_optical"/>
    <origin xyz="0 0 0" rpy="-1.5707 0 -1.5707"/>
  </joint>

  <!-- TODO: Add Gazebo material colours for all links -->

  <gazebo reference="base_link">
    <material>Gazebo/Blue</material>
  </gazebo>
  <gazebo reference="right_wheel">
    <material>Gazebo/Black</material>
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
  </gazebo>
  <gazebo reference="left_wheel">
    <material>Gazebo/Black</material>
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
  </gazebo>
  <gazebo reference="caster_wheel">
    <material>Gazebo/Grey</material>
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
  </gazebo>
  <gazebo reference="camera_link">
    <material>Gazebo/Red</material>
  </gazebo>

  <!-- TODO: Add Gazebo plugins for:
       - Joint state publisher
       - Pose publisher
       - Differential drive controller
  -->

  <gazebo>
     <!-- Joint state publisher for Gazebo Harmonic -->
     <plugin filename="libgz-sim-joint-state-publisher-system.so"
             name="gz::sim::systems::JointStatePublisher">
      <joint_name>left_wheel_joint</joint_name>
      <joint_name>right_wheel_joint</joint_name>
      <update_rate>20</update_rate>
    </plugin>

    <!-- Pose publisher plugin -->
    <plugin filename="libgz-sim-pose-publisher-system.so"
            name="gz::sim::systems::PosePublisher">
      <publish_link_pose>true</publish_link_pose>
      <publish_collision_pose>false</publish_collision_pose>
      <publish_visual_pose>false</publish_visual_pose>
      <publish_nested_model_pose>true</publish_nested_model_pose>
      <update_rate>20</update_rate>
    </plugin>

    <!-- Differential drive plugin for Gazebo Harmonic -->
    <plugin filename="libgz-sim-diff-drive-system.so"
            name="gz::sim::systems::DiffDrive">
      <left_joint>left_wheel_joint</left_joint>
      <right_joint>right_wheel_joint</right_joint>
      <wheel_separation>0.34</wheel_separation>
      <wheel_radius>0.08</wheel_radius>
      <odom_publish_frequency>20</odom_publish_frequency>
      <topic>cmd_vel</topic>
      <frame_id>odom</frame_id>
      <child_frame_id>base_link</child_frame_id>
    </plugin>
  </gazebo>

  <!-- TODO: Add camera sensors for both left and right cameras -->

  <gazebo reference="camera_link">
    <sensor name="camera" type="camera">
      <update_rate>10.0</update_rate>
      <camera>
        <camera_info_topic>camera/camera_info</camera_info_topic>
        <horizontal_fov>1.089</horizontal_fov>
        <image>
            <format>R8G8B8</format>
            <width>640</width>
            <height>480</height>
        </image>
        <clip>
            <near>0.05</near>
            <far>50.0</far>
        </clip>
      </camera>
      <topic>camera/image_raw</topic>
      <gz_frame_id>camera_link_optical</gz_frame_id>
    </sensor>
  </gazebo>

  <gazebo reference="camera_link">
    <sensor name="camera" type="camera">
      <update_rate>10.0</update_rate>
      <camera>
        <camera_info_topic>camera/camera_info</camera_info_topic>
        <horizontal_fov>1.089</horizontal_fov>
        <image>
            <format>R8G8B8</format>
            <width>640</width>
            <height>480</height>
        </image>
        <clip>
            <near>0.05</near>
            <far>50.0</far>
        </clip>
      </camera>
      <topic>camera/image_raw</topic>
      <gz_frame_id>camera_link_optical</gz_frame_id>
    </sensor>
  </gazebo>
</robot>